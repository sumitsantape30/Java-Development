Lifecycle- How maven internally works? (Phases of maven)

  To see the maven Lifecycle: 
                            firstly create a maven project -> Window -> Show View -> Other, then find and select "Maven" from the list.

 i) To execute a specific Maven lifecycle phase or goal, you can right-click on the project or a specific phase/goal and select the desired action. 
  For example, you can right-click on your project and select Run As -> Maven build..., then enter the goal (e.g., clean install) and click "Run."
 ii) You can also execute Maven goals from the context menu in the Project Explorer by right-clicking on the project and selecting Run As -> Maven build....
 
  Except clean all the lifecycles run in sequential manner. If I directly run package all the commands before will run first and then package command will run. the commands after package won't run.
  
  1. Clean: It removes the bytecode, means it removes the target folder from the project. Even if there are errors in your code it'll delete the target folder. it doesnt compiles the code it just deleted the target folder.
  2. Validate: It just validates whether you have pom.xml or not./ or any other files required for the build to happen.
  3. Compile: It looks for all the compilation errors in your source code. it is present in the directory src/main/java.
  4. Test: Used for executing unit/ integration test cases. (src/host)
  5. Package: Used for packaging your application in a jar file. It'll just create jar file of your code and put it in target folder.
      (Jar file is used to run your application on the server, you cant run particular class on server, you just run the jar file to run an application.)
  6. Verify: similar to validate it just varifies whether you have jar file or not.
  7. install: 
    Differece between mvn package and mvn install: mvn package packages your project's code and resources into an artifact, typically in the target directory, but it does not install the artifact into the local Maven repository.
    mvn install does the same packaging but additionally installs the artifact into the local Maven repository, making it available for use in other projects on your machine.
    :when we run install it also runs the previous phases as well.
    : install copies the jar files into the local repository which were created in the package phase.
  8. Site: validates whether you have remote repo, url, password etc.
  9. Deploy: Deploys the jars to the remove repository.
  
